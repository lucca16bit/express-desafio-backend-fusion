generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum affiliation {
  NEUTRAL
  JEDI_ORDER
  SITH_ORDER
  REBEL_ALLIANCE
  CIS
  GALACTIC_REPUBLIC
  GALACTIC_EMPIRE
  NEW_REPUBLIC
  FIRST_ORDER
  RESISTANCE
}

enum race {
  HUMAN
  WOOKIEE
  TWILEK
  RODIAN
  ZABRAK
  TOGRUTA
  CHISS
  NAUTOLAN
  MIRIALAN
  MON_CALAMARI
  TRANDOSHAN
  DROID
  EWOK
  HUTT
  TUSKENS
  KAMINOAN
  YODA
  DATHOMIRIAN
}

model user {
  id          Int         @id @default(autoincrement())
  name        String      @unique(map: "User_name_key") @db.VarChar(100)
  email       String      @unique(map: "User_email_key") @db.VarChar(100)
  password    String      @db.VarChar(255)
  affiliation affiliation @default(NEUTRAL)
  createdAt   DateTime    @default(now())
  planets     planet[]
  starSystems starSystem[]
  characters  characters[]
  spaceships  spaceShips[]
}

model planet {
  id          Int         @id @default(autoincrement())
  name        String      @unique(map: "Planet_name_key") @db.VarChar(100)
  climate     String      @db.VarChar(100)
  terrain     String      @db.VarChar(200)
  population  BigInt?
  systemId    Int
  userId      Int
  characters  characters[]
  starSystem  starSystem  @relation(fields: [systemId], references: [id], onDelete: Cascade)
  user        user        @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model starSystem {
  id          Int         @id @default(autoincrement())
  name        String      @unique(map: "Star_system_name_key") @db.VarChar(100)
  description String      @db.Text
  planets     planet[]
  userId      Int
  user        user        @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model characters {
  id            Int         @id @default(autoincrement())
  name          String      @unique(map: "Character_name_key") @db.VarChar(100)
  race          race        @default(HUMAN)
  affiliation   affiliation @default(NEUTRAL)
  spaceships    spaceShips[]
  homePlanetId  Int?
  userId        Int
  homePlanet    planet?     @relation(fields: [homePlanetId], references: [id],  onDelete: SetNull)
  user          user        @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model spaceShips {
  id                Int         @id @default(autoincrement())
  name              String      @unique(map: "SpaceShips_name_key") @db.VarChar(100)
  model             String      @db.VarChar(100)
  manufacturer      String      @db.VarChar(50)
  passengerCapacity Int
  pilots            characters[]
  userId            Int
  user              user        @relation(fields: [userId], references: [id], onDelete: Cascade)
}